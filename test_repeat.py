import sre_constants
from sre_parse import parse as sre_parse
from typing import Union

from char import Character
from repeat import Repeat
from sre import SreOpParser

def from_regex(pattern: str) -> Union[Repeat, Character]:
    (parsed_char,) = sre_parse(pattern)
    repeat = SreOpParser.parse_op(*parsed_char)
    return repeat


def test_star():
    r = from_regex(r'(abc)*')
    assert r.starriness == 1
    assert r.minimum_length == 0
    assert r.exact_character_class() is None

def test_question():
    r = from_regex(r'(abc)?')
    assert r.starriness == 0
    assert r.minimum_length == 0
    assert r.maximum_repeats == 1
    assert r.exact_character_class() is None

def test_plus():
    r = from_regex(r'(?:abc)+')
    assert r.starriness == 1
    assert r.minimum_length == 3
    assert r.exact_character_class() is None

def test_character_class():
    r = from_regex(r'a{4,}')
    assert r.starriness == 1
    assert r.minimum_length == 4
    assert r.exact_character_class() == from_regex(r'a')

def test_starriness():
    r = from_regex(r'(?:(?:a{4,})*)+')
    assert r.starriness == 3
    assert r.minimum_length == 0
    assert r.exact_character_class() == from_regex(r'a')